"use strict";(self.webpackChunkgorm=self.webpackChunkgorm||[]).push([[1074],{3905:function(e,r,n){n.d(r,{Zo:function(){return l},kt:function(){return p}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=t.createContext({}),u=function(e){var r=t.useContext(d),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},l=function(e){var r=u(e.components);return t.createElement(d.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},g=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),g=u(n),p=o,m=g["".concat(d,".").concat(p)]||g[p]||c[p]||i;return n?t.createElement(m,a(a({ref:r},l),{},{components:n})):t.createElement(m,a({ref:r},l))}));function p(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=g;var s={};for(var d in r)hasOwnProperty.call(r,d)&&(s[d]=r[d]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3174:function(e,r,n){n.r(r),n.d(r,{assets:function(){return l},contentTitle:function(){return d},default:function(){return p},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var t=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={title:"Sharding",layout:"page"},d=void 0,u={unversionedId:"sharding",id:"sharding",title:"Sharding",description:"Sharding \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684 Gorm \u5206\u8868\u4e2d\u95f4\u4ef6\u3002\u5b83\u57fa\u4e8e Conn \u5c42\u505a SQL \u62e6\u622a\u3001AST \u89e3\u6790\u3001\u5206\u8868\u8def\u7531\u3001\u81ea\u589e\u4e3b\u952e\u586b\u5145\uff0c\u5e26\u6765\u7684\u989d\u5916\u5f00\u9500\u6781\u5c0f\u3002\u5bf9\u5f00\u53d1\u8005\u53cb\u597d\u3001\u900f\u660e\uff0c\u4f7f\u7528\u4e0a\u4e0e\u666e\u901a SQL\u3001Gorm \u67e5\u8be2\u65e0\u5dee\u522b\uff0c\u53ea\u9700\u8981\u989d\u5916\u6ce8\u610f\u4e00\u4e0b\u5206\u8868\u952e\u6761\u4ef6\u3002 \u4e3a\u60a8\u63d0\u4f9b\u9ad8\u6027\u80fd\u7684\u6570\u636e\u5e93\u8bbf\u95ee\u3002",source:"@site/docs/sharding.md",sourceDirName:".",slug:"/sharding",permalink:"/gorm/docs/sharding",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sharding.md",tags:[],version:"current",frontMatter:{title:"Sharding",layout:"page"},sidebar:"tutorialSidebar",previous:{title:"\u8bbe\u7f6e",permalink:"/gorm/docs/settings"},next:{title:"SQL \u6784\u5efa\u5668",permalink:"/gorm/docs/sql_builder"}},l={},c=[{value:"\u529f\u80fd\u7279\u70b9",id:"\u529f\u80fd\u7279\u70b9",level:2},{value:"\u4f7f\u7528\u8bf4\u660e",id:"\u4f7f\u7528\u8bf4\u660e",level:2}],g={toc:c};function p(e){var r=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},g,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Sharding \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684 Gorm \u5206\u8868\u4e2d\u95f4\u4ef6\u3002\u5b83\u57fa\u4e8e Conn \u5c42\u505a SQL \u62e6\u622a\u3001AST \u89e3\u6790\u3001\u5206\u8868\u8def\u7531\u3001\u81ea\u589e\u4e3b\u952e\u586b\u5145\uff0c\u5e26\u6765\u7684\u989d\u5916\u5f00\u9500\u6781\u5c0f\u3002\u5bf9\u5f00\u53d1\u8005\u53cb\u597d\u3001\u900f\u660e\uff0c\u4f7f\u7528\u4e0a\u4e0e\u666e\u901a SQL\u3001Gorm \u67e5\u8be2\u65e0\u5dee\u522b\uff0c\u53ea\u9700\u8981\u989d\u5916\u6ce8\u610f\u4e00\u4e0b\u5206\u8868\u952e\u6761\u4ef6\u3002 \u4e3a\u60a8\u63d0\u4f9b\u9ad8\u6027\u80fd\u7684\u6570\u636e\u5e93\u8bbf\u95ee\u3002"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/go-gorm/sharding"},"https://github.com/go-gorm/sharding")),(0,i.kt)("h2",{id:"\u529f\u80fd\u7279\u70b9"},"\u529f\u80fd\u7279\u70b9"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u975e\u4fb5\u5165\u5f0f\u8bbe\u8ba1\uff0c \u52a0\u8f7d\u63d2\u4ef6\uff0c\u6307\u5b9a\u914d\u7f6e\uff0c\u65e2\u53ef\u5b9e\u73b0\u5206\u8868\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u8f7b\u5feb\uff0c \u975e\u57fa\u4e8e\u7f51\u7edc\u5c42\u7684\u4e2d\u95f4\u4ef6\uff0c\u50cf Go \u4e00\u6837\u5feb"),(0,i.kt)("li",{parentName:"ul"},"\u652f\u6301\u591a\u79cd\u6570\u636e\u5e93\u3002 PostgreSQL \u5df2\u901a\u8fc7\u6d4b\u8bd5\uff0cMySQL \u548c SQLite \u4e5f\u5728\u8def\u4e0a\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u591a\u79cd\u4e3b\u952e\u751f\u6210\u65b9\u5f0f\u652f\u6301\uff08Snowflake, PostgreSQL Sequence, \u4ee5\u53ca\u81ea\u5b9a\u4e49\u652f\u6301\uff09Snowflake \u652f\u6301\u4ece\u4e3b\u952e\u4e2d\u786e\u5b9a\u5206\u8868\u952e\u3002")),(0,i.kt)("h2",{id:"\u4f7f\u7528\u8bf4\u660e"},"\u4f7f\u7528\u8bf4\u660e"),(0,i.kt)("p",null,"\u914d\u7f6e Sharding \u4e2d\u95f4\u4ef6\uff0c\u4e3a\u9700\u8981\u5206\u8868\u7684\u4e1a\u52a1\u8868\u5b9a\u4e49\u4ed6\u4eec\u5206\u8868\u7684\u89c4\u5219\u3002 \u67e5\u770b ",(0,i.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/go-gorm/sharding"},"Godoc")," \u83b7\u53d6\u914d\u7f6e\u8be6\u60c5\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "fmt"\n\n    "gorm.io/driver/postgres"\n    "gorm.io/gorm"\n    "gorm.io/sharding"\n)\n\ndsn := "postgres://localhost:5432/sharding-db?sslmode=disable"\ndb, err := gorm.Open(postgres.New(postgres.Config{DSN: dsn}))\n\ndb.Use(sharding.Register(sharding.Config{\n    ShardingKey:         "user_id",\n    NumberOfShards:      64,\n    PrimaryKeyGenerator: sharding.PKSnowflake,\n}, "orders").Register(sharding.Config{\n    ShardingKey:         "user_id",\n    NumberOfShards:      256,\n    PrimaryKeyGenerator: sharding.PKSnowflake,\n    // This case for show up give notifications, audit_logs table use same sharding rule.\n}, Notification{}, AuditLog{}))\n')),(0,i.kt)("p",null,"\u4f9d\u7136\u4fdd\u6301\u539f\u6765\u7684\u65b9\u5f0f\u4f7f\u7528 db \u6765\u67e5\u8be2\u6570\u636e\u5e93\u3002 \u4f60\u53ea\u9700\u8981\u6ce8\u610f\u5728 CURD \u52a8\u4f5c\u7684\u65f6\u5019\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"\u660e\u786e\u77e5\u9053 Sharding Key")," \u5bf9\u5e94\u7684\u5206\u8868\uff0c\u67e5\u8be2\u6761\u4ef6\u5e26 Sharding Key\uff0c\u4ee5\u786e\u4fdd Sharding \u80fd\u7406\u89e3\u6570\u636e\u9700\u8981\u5bf9\u5e94\u5230\u54ea\u4e00\u4e2a\u5b50\u8868\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// GORM \u521b\u5efa\u793a\u4f8b\uff0c\u8fd9\u4f1a\u63d2\u5165\u5230 orders_02 \u8868\ndb.Create(&Order{UserID: 2})\n// sql: INSERT INTO orders_2 ...\n\n// \u539f\u751f SQL \u63d2\u5165\u793a\u4f8b\uff0c\u8fd9\u4f1a\u63d2\u5165\u5230 orders_03 \u8868\ndb.Exec("INSERT INTO orders(user_id) VALUES(?)", int64(3))\n\n// \u8fd9\u4f1a\u629b\u51fa ErrMissingShardingKey \u9519\u8bef\uff0c\u56e0\u6b64\u6b64\u5904\u6ca1\u6709\u63d0\u4f9b sharding key\ndb.Create(&Order{Amount: 10, ProductID: 100})\nfmt.Println(err)\n\n// Find \u65b9\u6cd5\uff0c\u8fd9\u4f1a\u68c0\u7d22 order_02 \u8868\nvar orders []Order\ndb.Model(&Order{}).Where("user_id", int64(2)).Find(&orders)\nfmt.Printf("%#v\\n", orders)\n\n// \u539f\u751f SQL \u4e5f\u662f\u652f\u6301\u7684\ndb.Raw("SELECT * FROM orders WHERE user_id = ?", int64(3)).Scan(&orders)\nfmt.Printf("%#v\\n", orders)\n\n// \u8fd9\u4f1a\u629b\u51fa ErrMissingShardingKey \u9519\u8bef\uff0c\u56e0\u4e3a WHERE \u6761\u4ef6\u6ca1\u6709\u5305\u542b sharding key\nerr = db.Model(&Order{}).Where("product_id", "1").Find(&orders).Error\nfmt.Println(err)\n\n// Update \u548c Delete \u65b9\u6cd5\u4e0e\u521b\u5efa\u3001\u67e5\u8be2\u7c7b\u4f3c\ndb.Exec("UPDATE orders SET product_id = ? WHERE user_id = ?", 2, int64(3))\nerr = db.Exec("DELETE FROM orders WHERE product_id = 3").Error\nfmt.Println(err) // ErrMissingShardingKey\n')),(0,i.kt)("p",null,"\u5b8c\u6574\u793a\u4f8b\u6f14\u793a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/go-gorm/sharding/tree/main/examples"},"Example"),"\u3002"))}p.isMDXComponent=!0}}]);