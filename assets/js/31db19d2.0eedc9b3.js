"use strict";(self.webpackChunkgorm=self.webpackChunkgorm||[]).push([[6011],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),u=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=u(e.components);return o.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},c=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=u(t),m=r,g=c["".concat(l,".").concat(m)]||c[m]||p[m]||s;return t?o.createElement(g,a(a({ref:n},d),{},{components:t})):o.createElement(g,a({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,a=new Array(s);a[0]=c;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var u=2;u<s;u++)a[u]=t[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3861:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var o=t(7462),r=t(3366),s=(t(7294),t(3905)),a=["components"],i={title:"\u4f1a\u8bdd",layout:"page"},l=void 0,u={unversionedId:"session",id:"session",title:"\u4f1a\u8bdd",description:"GORM \u63d0\u4f9b\u4e86 Session \u65b9\u6cd5\uff0c\u8fd9\u662f\u4e00\u4e2a New Session Method\uff0c\u5b83\u5141\u8bb8\u521b\u5efa\u5e26\u914d\u7f6e\u7684\u65b0\u5efa\u4f1a\u8bdd\u6a21\u5f0f\uff1a",source:"@site/docs/session.md",sourceDirName:".",slug:"/session",permalink:"/gorm/docs/session",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/session.md",tags:[],version:"current",frontMatter:{title:"\u4f1a\u8bdd",layout:"page"},sidebar:"tutorialSidebar",previous:{title:"Serializer",permalink:"/gorm/docs/serializer"},next:{title:"\u8bbe\u7f6e",permalink:"/gorm/docs/settings"}},d={},p=[{value:"DryRun",id:"dryrun",level:2},{value:"\u9884\u7f16\u8bd1",id:"\u9884\u7f16\u8bd1",level:2},{value:"NewDB",id:"newdb",level:2},{value:"Initialized",id:"initialized",level:2},{value:"Skip Hooks",id:"skip-hooks",level:2},{value:"DisableNestedTransaction",id:"disablenestedtransaction",level:2},{value:"AllowGlobalUpdate",id:"allowglobalupdate",level:2},{value:"FullSaveAssociations",id:"fullsaveassociations",level:2},{value:"Context",id:"context",level:2},{value:"Logger",id:"logger",level:2},{value:"NowFunc",id:"nowfunc",level:2},{value:"Debug",id:"debug",level:2},{value:"QueryFields",id:"queryfields",level:2},{value:"CreateBatchSize",id:"createbatchsize",level:2}],c={toc:p};function m(e){var n=e.components,t=(0,r.Z)(e,a);return(0,s.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"GORM \u63d0\u4f9b\u4e86 ",(0,s.kt)("inlineCode",{parentName:"p"},"Session")," \u65b9\u6cd5\uff0c\u8fd9\u662f\u4e00\u4e2a ",(0,s.kt)("a",{parentName:"p",href:"method_chaining.html"},(0,s.kt)("inlineCode",{parentName:"a"},"New Session Method")),"\uff0c\u5b83\u5141\u8bb8\u521b\u5efa\u5e26\u914d\u7f6e\u7684\u65b0\u5efa\u4f1a\u8bdd\u6a21\u5f0f\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"// Session Configuration\ntype Session struct {\n  DryRun                   bool\n  PrepareStmt              bool\n  NewDB                    bool\n  Initialized              bool\n  SkipHooks                bool\n  SkipDefaultTransaction   bool\n  DisableNestedTransaction bool\n  AllowGlobalUpdate        bool\n  FullSaveAssociations     bool\n  QueryFields              bool\n  Context                  context.Context\n  Logger                   logger.Interface\n  NowFunc                  func() time.Time\n  CreateBatchSize          int\n}\n")),(0,s.kt)("h2",{id:"dryrun"},"DryRun"),(0,s.kt)("p",null,"\u751f\u6210 ",(0,s.kt)("inlineCode",{parentName:"p"},"SQL")," \u4f46\u4e0d\u6267\u884c\u3002 \u5b83\u53ef\u4ee5\u7528\u4e8e\u51c6\u5907\u6216\u6d4b\u8bd5\u751f\u6210\u7684 SQL\uff0c\u4f8b\u5982\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'// \u65b0\u5efa\u4f1a\u8bdd\u6a21\u5f0f\nstmt := db.Session(&Session{DryRun: true}).First(&user, 1).Statement\nstmt.SQL.String() //=> SELECT * FROM `users` WHERE `id` = $1 ORDER BY `id`\nstmt.Vars         //=> []interface{}{1}\n\n// \u5168\u5c40 DryRun \u6a21\u5f0f\ndb, err := gorm.Open(sqlite.Open("gorm.db"), &gorm.Config{DryRun: true})\n\n// \u4e0d\u540c\u7684\u6570\u636e\u5e93\u751f\u6210\u4e0d\u540c\u7684 SQL\nstmt := db.Find(&user, 1).Statement\nstmt.SQL.String() //=> SELECT * FROM `users` WHERE `id` = $1 // PostgreSQL\nstmt.SQL.String() //=> SELECT * FROM `users` WHERE `id` = ?  // MySQL\nstmt.Vars         //=> []interface{}{1}\n')),(0,s.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u751f\u6210\u6700\u7ec8\u7684 SQL\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"// \u6ce8\u610f\uff1aSQL \u5e76\u4e0d\u603b\u662f\u80fd\u5b89\u5168\u5730\u6267\u884c\uff0cGORM \u4ec5\u5c06\u5176\u7528\u4e8e\u65e5\u5fd7\uff0c\u5b83\u53ef\u80fd\u5bfc\u81f4\u4f1a SQL \u6ce8\u5165\ndb.Dialector.Explain(stmt.SQL.String(), stmt.Vars...)\n// SELECT * FROM `users` WHERE `id` = 1\n")),(0,s.kt)("h2",{id:"\u9884\u7f16\u8bd1"},"\u9884\u7f16\u8bd1"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"PreparedStmt")," \u5728\u6267\u884c\u4efb\u4f55 SQL \u65f6\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a prepared statement \u5e76\u5c06\u5176\u7f13\u5b58\uff0c\u4ee5\u63d0\u9ad8\u540e\u7eed\u7684\u6548\u7387\uff0c\u4f8b\u5982\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'// \u5168\u5c40\u6a21\u5f0f\uff0c\u6240\u6709 DB \u64cd\u4f5c\u90fd\u4f1a\u521b\u5efa\u5e76\u7f13\u5b58\u9884\u7f16\u8bd1\u8bed\u53e5\ndb, err := gorm.Open(sqlite.Open("gorm.db"), &gorm.Config{\n  PrepareStmt: true,\n})\n\n// \u4f1a\u8bdd\u6a21\u5f0f\ntx := db.Session(&Session{PrepareStmt: true})\ntx.First(&user, 1)\ntx.Find(&users)\ntx.Model(&user).Update("Age", 18)\n\n// returns prepared statements manager\nstmtManger, ok := tx.ConnPool.(*PreparedStmtDB)\n\n// \u5173\u95ed *\u5f53\u524d\u4f1a\u8bdd* \u7684\u9884\u7f16\u8bd1\u6a21\u5f0f\nstmtManger.Close()\n\n// \u4e3a *\u5f53\u524d\u4f1a\u8bdd* \u9884\u7f16\u8bd1 SQL\nstmtManger.PreparedSQL // => []string{}\n\n// \u4e3a\u5f53\u524d\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7684\uff08\u6240\u6709\u4f1a\u8bdd\uff09\u5f00\u542f\u9884\u7f16\u8bd1\u6a21\u5f0f\nstmtManger.Stmts // map[string]*sql.Stmt\n\nfor sql, stmt := range stmtManger.Stmts {\n  sql  // \u9884\u7f16\u8bd1 SQL\n  stmt // \u9884\u7f16\u8bd1\u6a21\u5f0f\n  stmt.Close() // \u5173\u95ed\u9884\u7f16\u8bd1\u6a21\u5f0f\n}\n')),(0,s.kt)("h2",{id:"newdb"},"NewDB"),(0,s.kt)("p",null,"\u901a\u8fc7 ",(0,s.kt)("inlineCode",{parentName:"p"},"NewDB")," \u9009\u9879\u521b\u5efa\u4e00\u4e2a\u4e0d\u5e26\u4e4b\u524d\u6761\u4ef6\u7684\u65b0 DB\uff0c\u4f8b\u5982\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'tx := db.Where("name = ?", "jinzhu").Session(&gorm.Session{NewDB: true})\n\ntx.First(&user)\n// SELECT * FROM users ORDER BY id LIMIT 1\n\ntx.First(&user, "id = ?", 10)\n// SELECT * FROM users WHERE id = 10 ORDER BY id\n\n// \u4e0d\u5e26 `NewDB` \u9009\u9879\ntx2 := db.Where("name = ?", "jinzhu").Session(&gorm.Session{})\ntx2.First(&user)\n// SELECT * FROM users WHERE name = "jinzhu" ORDER BY id\n')),(0,s.kt)("h2",{id:"initialized"},"Initialized"),(0,s.kt)("p",null,"Create a new initialized DB, which is not Method Chain/Gortoutine Safe anymore, refer ",(0,s.kt)("a",{parentName:"p",href:"method_chaining.html"},"Method Chaining")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"tx := db.Session(&gorm.Session{Initialized: true})\n")),(0,s.kt)("h2",{id:"skip-hooks"},"Skip Hooks"),(0,s.kt)("p",null,"If you want to skip ",(0,s.kt)("inlineCode",{parentName:"p"},"Hooks")," methods, you can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"SkipHooks")," session mode, for example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'DB.Session(&gorm.Session{SkipHooks: true}).Create(&user)\n\nDB.Session(&gorm.Session{SkipHooks: true}).Create(&users)\n\nDB.Session(&gorm.Session{SkipHooks: true}).CreateInBatches(users, 100)\n\nDB.Session(&gorm.Session{SkipHooks: true}).Find(&user)\n\nDB.Session(&gorm.Session{SkipHooks: true}).Delete(&user)\n\nDB.Session(&gorm.Session{SkipHooks: true}).Model(User{}).Where("age > ?", 18).Updates(&user)\n')),(0,s.kt)("h2",{id:"disablenestedtransaction"},"DisableNestedTransaction"),(0,s.kt)("p",null,"When using ",(0,s.kt)("inlineCode",{parentName:"p"},"Transaction")," method inside a DB transaction, GORM will use ",(0,s.kt)("inlineCode",{parentName:"p"},"SavePoint(savedPointName)"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"RollbackTo(savedPointName)")," to give you the nested transaction support. You can disable it by using the ",(0,s.kt)("inlineCode",{parentName:"p"},"DisableNestedTransaction")," option, for example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"db.Session(&gorm.Session{\n  DisableNestedTransaction: true,\n}).CreateInBatches(&users, 100)\n")),(0,s.kt)("h2",{id:"allowglobalupdate"},"AllowGlobalUpdate"),(0,s.kt)("p",null,"GORM doesn't allow global update/delete by default, will return ",(0,s.kt)("inlineCode",{parentName:"p"},"ErrMissingWhereClause")," error. You can set this option to true to enable it, for example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'db.Session(&gorm.Session{\n  AllowGlobalUpdate: true,\n}).Model(&User{}).Update("name", "jinzhu")\n// UPDATE users SET `name` = "jinzhu"\n')),(0,s.kt)("h2",{id:"fullsaveassociations"},"FullSaveAssociations"),(0,s.kt)("p",null,"GORM will auto-save associations and its reference using ",(0,s.kt)("a",{parentName:"p",href:"create.html#upsert"},"Upsert")," when creating/updating a record. If you want to update associations' data, you should use the ",(0,s.kt)("inlineCode",{parentName:"p"},"FullSaveAssociations")," mode, for example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'db.Session(&gorm.Session{FullSaveAssociations: true}).Updates(&user)\n// ...\n// INSERT INTO "addresses" (address1) VALUES ("Billing Address - Address 1"), ("Shipping Address - Address 1") ON DUPLICATE KEY SET address1=VALUES(address1);\n// INSERT INTO "users" (name,billing_address_id,shipping_address_id) VALUES ("jinzhu", 1, 2);\n// INSERT INTO "emails" (user_id,email) VALUES (111, "jinzhu@example.com"), (111, "jinzhu-2@example.com") ON DUPLICATE KEY SET email=VALUES(email);\n// ...\n')),(0,s.kt)("h2",{id:"context"},"Context"),(0,s.kt)("p",null,"With the ",(0,s.kt)("inlineCode",{parentName:"p"},"Context")," option, you can set the ",(0,s.kt)("inlineCode",{parentName:"p"},"Context")," for following SQL operations, for example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'timeoutCtx, _ := context.WithTimeout(context.Background(), time.Second)\ntx := db.Session(&Session{Context: timeoutCtx})\n\ntx.First(&user) // query with context timeoutCtx\ntx.Model(&user).Update("role", "admin") // update with context timeoutCtx\n')),(0,s.kt)("p",null,"GORM also provides shortcut method ",(0,s.kt)("inlineCode",{parentName:"p"},"WithContext"),",  here is the definition:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"func (db *DB) WithContext(ctx context.Context) *DB {\n  return db.Session(&Session{Context: ctx})\n}\n")),(0,s.kt)("h2",{id:"logger"},"Logger"),(0,s.kt)("p",null,"Gorm allows customizing built-in logger with the ",(0,s.kt)("inlineCode",{parentName:"p"},"Logger")," option, for example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'newLogger := logger.New(log.New(os.Stdout, "\\r\\n", log.LstdFlags),\n              logger.Config{\n                SlowThreshold: time.Second,\n                LogLevel:      logger.Silent,\n                Colorful:      false,\n              })\ndb.Session(&Session{Logger: newLogger})\n\ndb.Session(&Session{Logger: logger.Default.LogMode(logger.Silent)})\n')),(0,s.kt)("p",null,"Checkout ",(0,s.kt)("a",{parentName:"p",href:"logger.html"},"Logger")," for more details."),(0,s.kt)("h2",{id:"nowfunc"},"NowFunc"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"NowFunc")," allows changing the function to get current time of GORM, for example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"db.Session(&Session{\n  NowFunc: func() time.Time {\n    return time.Now().Local()\n  },\n})\n")),(0,s.kt)("h2",{id:"debug"},"Debug"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Debug")," is a shortcut method to change session's ",(0,s.kt)("inlineCode",{parentName:"p"},"Logger")," to debug mode,  here is the definition:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"func (db *DB) Debug() (tx *DB) {\n  return db.Session(&Session{\n    Logger:         db.Logger.LogMode(logger.Info),\n  })\n}\n")),(0,s.kt)("h2",{id:"queryfields"},"QueryFields"),(0,s.kt)("p",null,"Select by fields"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"db.Session(&gorm.Session{QueryFields: true}).Find(&user)\n// SELECT `users`.`name`, `users`.`age`, ... FROM `users` // with this option\n// SELECT * FROM `users` // without this option\n")),(0,s.kt)("h2",{id:"createbatchsize"},"CreateBatchSize"),(0,s.kt)("p",null,"Default batch size"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'users = [5000]User{{Name: "jinzhu", Pets: []Pet{pet1, pet2, pet3}}...}\n\ndb.Session(&gorm.Session{CreateBatchSize: 1000}).Create(&users)\n// INSERT INTO users xxx (5 batches)\n// INSERT INTO pets xxx (15 batches)\n')))}m.isMDXComponent=!0}}]);