"use strict";(self.webpackChunkgorm=self.webpackChunkgorm||[]).push([[2538],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return g}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function u(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),d=c(r),g=a,m=d["".concat(s,".").concat(g)]||d[g]||l[g]||o;return r?t.createElement(m,i(i({ref:n},p),{},{components:r})):t.createElement(m,i({ref:n},p))}));function g(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var u={};for(var s in n)hasOwnProperty.call(n,s)&&(u[s]=n[s]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var c=2;c<o;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4402:function(e,n,r){r.r(n),r.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return l}});var t=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],u={title:"Scopes",layout:"page"},s=void 0,c={unversionedId:"scopes",id:"scopes",title:"Scopes",description:"\u4f5c\u7528\u57df\u5141\u8bb8\u4f60\u590d\u7528\u901a\u7528\u7684\u903b\u8f91\uff0c\u8fd9\u79cd\u5171\u4eab\u903b\u8f91\u9700\u8981\u5b9a\u4e49\u4e3a\u7c7b\u578bfunc(gorm.DB) gorm.DB\u3002",source:"@site/docs/scopes.md",sourceDirName:".",slug:"/scopes",permalink:"/gorm/docs/scopes",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/scopes.md",tags:[],version:"current",frontMatter:{title:"Scopes",layout:"page"},sidebar:"tutorialSidebar",previous:{title:"\u67e5\u8be2",permalink:"/gorm/docs/query"},next:{title:"\u5b89\u5168",permalink:"/gorm/docs/security"}},p={},l=[{value:"\u67e5\u8be2",id:"\u67e5\u8be2",level:2},{value:'<span id="pagination">\u5206\u9875</span>',id:"\u5206\u9875",level:3},{value:"\u52a8\u6001\u8868",id:"\u52a8\u6001\u8868",level:2},{value:"\u66f4\u65b0",id:"\u66f4\u65b0",level:2}],d={toc:l};function g(e){var n=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u4f5c\u7528\u57df\u5141\u8bb8\u4f60\u590d\u7528\u901a\u7528\u7684\u903b\u8f91\uff0c\u8fd9\u79cd\u5171\u4eab\u903b\u8f91\u9700\u8981\u5b9a\u4e49\u4e3a\u7c7b\u578b",(0,o.kt)("inlineCode",{parentName:"p"},"func(*gorm.DB) *gorm.DB"),"\u3002"),(0,o.kt)("h2",{id:"\u67e5\u8be2"},"\u67e5\u8be2"),(0,o.kt)("p",null,"Scope \u67e5\u8be2\u793a\u4f8b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func AmountGreaterThan1000(db *gorm.DB) *gorm.DB {\n  return db.Where("amount > ?", 1000)\n}\n\nfunc PaidWithCreditCard(db *gorm.DB) *gorm.DB {\n  return db.Where("pay_mode_sign = ?", "C")\n}\n\nfunc PaidWithCod(db *gorm.DB) *gorm.DB {\n  return db.Where("pay_mode_sign = ?", "C")\n}\n\nfunc OrderStatus(status []string) func (db *gorm.DB) *gorm.DB {\n  return func (db *gorm.DB) *gorm.DB {\n    return db.Where("status IN (?)", status)\n  }\n}\n\ndb.Scopes(AmountGreaterThan1000, PaidWithCreditCard).Find(&orders)\n// \u67e5\u627e\u6240\u6709\u91d1\u989d\u5927\u4e8e 1000 \u7684\u4fe1\u7528\u5361\u8ba2\u5355\n\ndb.Scopes(AmountGreaterThan1000, PaidWithCod).Find(&orders)\n// \u67e5\u627e\u6240\u6709\u91d1\u989d\u5927\u4e8e 1000 \u7684 COD \u8ba2\u5355\n\ndb.Scopes(AmountGreaterThan1000, OrderStatus([]string{"paid", "shipped"})).Find(&orders)\n// \u67e5\u627e\u6240\u6709\u91d1\u989d\u5927\u4e8e1000 \u7684\u5df2\u4ed8\u6b3e\u6216\u5df2\u53d1\u8d27\u8ba2\u5355\n')),(0,o.kt)("h3",{id:"\u5206\u9875"},(0,o.kt)("span",{id:"pagination"},"\u5206\u9875")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func Paginate(r *http.Request) func(db *gorm.DB) *gorm.DB {\n  return func (db *gorm.DB) *gorm.DB {\n    q := r.URL.Query()\n    page, _ := strconv.Atoi(q.Get("page"))\n    if page == 0 {\n      page = 1\n    }\n\n    pageSize, _ := strconv.Atoi(q.Get("page_size"))\n    switch {\n    case pageSize > 100:\n      pageSize = 100\n    case pageSize <= 0:\n      pageSize = 10\n    }\n\n    offset := (page - 1) * pageSize\n    return db.Offset(offset).Limit(pageSize)\n  }\n}\n\ndb.Scopes(Paginate(r)).Find(&users)\ndb.Scopes(Paginate(r)).Find(&articles)\n')),(0,o.kt)("h2",{id:"\u52a8\u6001\u8868"},"\u52a8\u6001\u8868"),(0,o.kt)("p",null,"\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"Scopes")," \u6765\u52a8\u6001\u6307\u5b9a\u67e5\u8be2\u7684\u8868"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func TableOfYear(user *User, year int) func(db *gorm.DB) *gorm.DB {\n  return func(db *gorm.DB) *gorm.DB {\n        tableName := user.TableName() + strconv.Itoa(year)\n        return db.Table(tableName)\n  }\n}\n\nDB.Scopes(TableOfYear(user, 2019)).Find(&users)\n// SELECT * FROM users_2019;\n\nDB.Scopes(TableOfYear(user, 2020)).Find(&users)\n// SELECT * FROM users_2020;\n\n// Table form different database\nfunc TableOfOrg(user *User, dbName string) func(db *gorm.DB) *gorm.DB {\n  return func(db *gorm.DB) *gorm.DB {\n        tableName := dbName + "." + user.TableName()\n        return db.Table(tableName)\n  }\n}\n\nDB.Scopes(TableOfOrg(user, "org1")).Find(&users)\n// SELECT * FROM org1.users;\n\nDB.Scopes(TableOfOrg(user, "org2")).Find(&users)\n// SELECT * FROM org2.users;\n')),(0,o.kt)("h2",{id:"\u66f4\u65b0"},"\u66f4\u65b0"),(0,o.kt)("p",null,"Scope \u66f4\u65b0\u3001\u5220\u9664\u793a\u4f8b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func CurOrganization(r *http.Request) func(db *gorm.DB) *gorm.DB {\n  return func (db *gorm.DB) *gorm.DB {\n    org := r.Query("org")\n\n    if org != "" {\n      var organization Organization\n      if db.Session(&Session{}).First(&organization, "name = ?", org).Error == nil {\n        return db.Where("org_id = ?", organization.ID)\n      }\n    }\n\n    db.AddError("invalid organization")\n    return db\n  }\n}\n\ndb.Model(&article).Scopes(CurOrganization(r)).Update("Name", "name 1")\n// UPDATE articles SET name = "name 1" WHERE org_id = 111\ndb.Scopes(CurOrganization(r)).Delete(&Article{})\n// DELETE FROM articles WHERE org_id = 111\n')))}g.isMDXComponent=!0}}]);