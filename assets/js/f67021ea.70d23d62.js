"use strict";(self.webpackChunkgorm=self.webpackChunkgorm||[]).push([[1069],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return c}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),s=p(t),c=i,g=s["".concat(l,".").concat(c)]||s[c]||u[c]||o;return t?r.createElement(g,a(a({ref:n},d),{},{components:t})):r.createElement(g,a({ref:n},d))}));function c(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=s;var m={};for(var l in n)hasOwnProperty.call(n,l)&&(m[l]=n[l]);m.originalType=e,m.mdxType="string"==typeof e?e:i,a[1]=m;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},9978:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return m},metadata:function(){return p},toc:function(){return u}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],m={title:"\u6570\u636e\u5e93\u7d22\u5f15",layout:"page"},l=void 0,p={unversionedId:"indexes",id:"indexes",title:"\u6570\u636e\u5e93\u7d22\u5f15",description:"GORM \u5141\u8bb8\u901a\u8fc7 index\u3001uniqueIndex \u6807\u7b7e\u521b\u5efa\u7d22\u5f15\uff0c\u8fd9\u4e9b\u7d22\u5f15\u5c06\u5728\u4f7f\u7528 GORM \u8fdb\u884cAutoMigrate \u6216 Createtable  \u65f6\u521b\u5efa",source:"@site/docs/indexes.md",sourceDirName:".",slug:"/indexes",permalink:"/gorm/docs/indexes",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/indexes.md",tags:[],version:"current",frontMatter:{title:"\u6570\u636e\u5e93\u7d22\u5f15",layout:"page"},sidebar:"tutorialSidebar",previous:{title:"GORM \u6307\u5357",permalink:"/gorm/docs/"},next:{title:"Logger",permalink:"/gorm/docs/logger"}},d={},u=[{value:"\u7d22\u5f15\u6807\u7b7e",id:"\u7d22\u5f15\u6807\u7b7e",level:2},{value:"\u552f\u4e00\u7d22\u5f15",id:"\u552f\u4e00\u7d22\u5f15",level:3},{value:"\u590d\u5408\u7d22\u5f15",id:"\u590d\u5408\u7d22\u5f15",level:2},{value:"\u5b57\u6bb5\u4f18\u5148\u7ea7",id:"\u5b57\u6bb5\u4f18\u5148\u7ea7",level:3},{value:"Shared composite indexes",id:"shared-composite-indexes",level:3},{value:"\u591a\u7d22\u5f15",id:"\u591a\u7d22\u5f15",level:2}],s={toc:u};function c(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"GORM \u5141\u8bb8\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"index"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"uniqueIndex")," \u6807\u7b7e\u521b\u5efa\u7d22\u5f15\uff0c\u8fd9\u4e9b\u7d22\u5f15\u5c06\u5728\u4f7f\u7528 GORM \u8fdb\u884c",(0,o.kt)("a",{parentName:"p",href:"migration.html"},"AutoMigrate \u6216 Createtable ")," \u65f6\u521b\u5efa"),(0,o.kt)("h2",{id:"\u7d22\u5f15\u6807\u7b7e"},"\u7d22\u5f15\u6807\u7b7e"),(0,o.kt)("p",null,"GORM \u53ef\u4ee5\u63a5\u53d7\u5f88\u591a\u7d22\u5f15\u8bbe\u7f6e\uff0c\u4f8b\u5982",(0,o.kt)("inlineCode",{parentName:"p"},"class"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"type"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"where"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"comment"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"expression"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"sort"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"collate"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"option")),(0,o.kt)("p",null,"\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u5b83\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'type User struct {\n    Name  string `gorm:"index"`\n    Name2 string `gorm:"index:idx_name,unique"`\n    Name3 string `gorm:"index:,sort:desc,collate:utf8,type:btree,length:10,where:name3 != \'jinzhu\'"`\n    Name4 string `gorm:"uniqueIndex"`\n    Age   int64  `gorm:"index:,class:FULLTEXT,comment:hello \\\\, world,where:age > 10"`\n    Age2  int64  `gorm:"index:,expression:ABS(age)"`\n}\n\n// MySQL \u9009\u9879\ntype User struct {\n    Name string `gorm:"index:,class:FULLTEXT,option:WITH PARSER ngram INVISIBLE"`\n}\n\n// PostgreSQL \u9009\u9879\ntype User struct {\n    Name string `gorm:"index:,option:CONCURRENTLY"`\n}\n')),(0,o.kt)("h3",{id:"\u552f\u4e00\u7d22\u5f15"},"\u552f\u4e00\u7d22\u5f15"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"uniqueIndex")," \u6807\u7b7e\u7684\u4f5c\u7528\u4e0e ",(0,o.kt)("inlineCode",{parentName:"p"},"index")," \u7c7b\u4f3c\uff0c\u5b83\u7b49\u6548\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"index:,unique")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'type User struct {\n    Name1 string `gorm:"uniqueIndex"`\n    Name2 string `gorm:"uniqueIndex:idx_name,sort:desc"`\n}\n')),(0,o.kt)("h2",{id:"\u590d\u5408\u7d22\u5f15"},"\u590d\u5408\u7d22\u5f15"),(0,o.kt)("p",null,"\u4e24\u4e2a\u5b57\u6bb5\u4f7f\u7528\u540c\u4e00\u4e2a\u7d22\u5f15\u540d\u5c06\u521b\u5efa\u590d\u5408\u7d22\u5f15\uff0c\u4f8b\u5982\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// create composite index `idx_member` with columns `name`, `number`\ntype User struct {\n    Name   string `gorm:"index:idx_member"`\n    Number string `gorm:"index:idx_member"`\n}\n')),(0,o.kt)("h3",{id:"\u5b57\u6bb5\u4f18\u5148\u7ea7"},"\u5b57\u6bb5\u4f18\u5148\u7ea7"),(0,o.kt)("p",null,"\u590d\u5408\u7d22\u5f15\u5217\u7684\u987a\u5e8f\u4f1a\u5f71\u54cd\u5176\u6027\u80fd\uff0c\u56e0\u6b64\u5fc5\u987b\u4ed4\u7ec6\u8003\u8651"),(0,o.kt)("p",null,"\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"priority")," \u6307\u5b9a\u987a\u5e8f\uff0c\u9ed8\u8ba4\u4f18\u5148\u7ea7\u503c\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"10"),"\uff0c\u5982\u679c\u4f18\u5148\u7ea7\u503c\u76f8\u540c\uff0c\u5219\u987a\u5e8f\u53d6\u51b3\u4e8e\u6a21\u578b\u7ed3\u6784\u4f53\u5b57\u6bb5\u7684\u987a\u5e8f"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'type User struct {\n    Name   string `gorm:"index:idx_member"`\n    Number string `gorm:"index:idx_member"`\n}\n// column order: name, number\n\ntype User struct {\n    Name   string `gorm:"index:idx_member,priority:2"`\n    Number string `gorm:"index:idx_member,priority:1"`\n}\n// column order: number, name\n\ntype User struct {\n    Name   string `gorm:"index:idx_member,priority:12"`\n    Number string `gorm:"index:idx_member"`\n}\n// column order: number, name\n')),(0,o.kt)("h3",{id:"shared-composite-indexes"},"Shared composite indexes"),(0,o.kt)("p",null,"If you are creating shared composite indexes with an embedding struct, you can't specify the index name, as embedding the struct more than once results in the duplicated index name in db."),(0,o.kt)("p",null,"In this case, you can use index tag ",(0,o.kt)("inlineCode",{parentName:"p"},"composite"),", it means the id of the composite index. All fields which have the same composite id of the struct are put together to the same index, just like the original rule. But the improvement is it lets the most derived/embedding struct generates the name of index by NamingStrategy. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'type Foo struct {\n  IndexA int `gorm:"index:,unique,composite:myname"`\n  IndexB int `gorm:"index:,unique,composite:myname"`\n}\n')),(0,o.kt)("p",null,"If the table Foo is created, the name of composite index will be ",(0,o.kt)("inlineCode",{parentName:"p"},"idx_foo_myname"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type Bar0 struct {\n  Foo\n}\n\ntype Bar1 struct {\n  Foo\n}\n")),(0,o.kt)("p",null,"Respectively, the name of composite index is ",(0,o.kt)("inlineCode",{parentName:"p"},"idx_bar0_myname")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"idx_bar1_myname"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"composite")," only works if not specify the name of index."),(0,o.kt)("h2",{id:"\u591a\u7d22\u5f15"},"\u591a\u7d22\u5f15"),(0,o.kt)("p",null,"A field accepts multiple ",(0,o.kt)("inlineCode",{parentName:"p"},"index"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"uniqueIndex")," tags that will create multiple indexes on a field"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'type UserIndex struct {\n    OID          int64  `gorm:"index:idx_id;index:idx_oid,unique"`\n    MemberNumber string `gorm:"index:idx_id"`\n}\n')))}c.isMDXComponent=!0}}]);